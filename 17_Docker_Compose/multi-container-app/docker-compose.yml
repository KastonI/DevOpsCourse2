services: 
  db:
    image: postgres:17-alpine
    container_name: postgres-db
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    restart: always
    expose:
      - "5432:5432"
    volumes:
      - db-data:/var/lib/postgresql/data
      - ./init/init.sql:/docker-entrypoint-initdb.d/init.sql:ro
    networks:
      - appnet
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}","-d", "${POSTGRES_DB}"]
      start_period: 15s
      interval: 10s
      timeout: 5s
      retries: 3


  redis:
    image: redis:7.4-alpine
    container_name: redis
    restart: always
    expose:
      - "6379:6379"
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
    networks:
      - appnet
    command: ["redis-server", "--requirepass", "${REDIS_PASSWORD}"]

  nginx:
    image: nginx:1.27-alpine
    container_name: nginx
    restart: always
    networks:
      - appnet
    depends_on:
      - web
    ports:
      - "80:80"
    volumes:
      - ./init/default.conf:/etc/nginx/conf.d/default.conf:ro
      - ./init/index.html:/usr/share/nginx/html/index.html
    

  web: 
    build: ./web/
    environment:
      REDIS_PASSWORD: ${REDIS_PASSWORD}
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: ${POSTGRES_DB}
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_started
    expose:
      - "5000:5000"
    networks:
      - appnet

networks:
  appnet:
    driver: bridge

volumes:
  db-data: