version: '3.8'
services:
  db:
    image: postgres:17-alpine
    deploy:
      restart_policy:
        condition: on-failure
    secrets:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
    environment:
      POSTGRES_USER: /run/secrets/POSTGRES_USER
      POSTGRES_PASSWORD: /run/secrets/POSTGRES_PASSWORD
      POSTGRES_DB: devops
    configs:
      - source: db_init
        target: /docker-entrypoint-initdb.d/init.sql
    networks:
      - appnet


  redis:
    image: redis:7.4-alpine
    deploy:
      restart_policy:
        condition: on-failure
    secrets:
     - REDIS_PASSWORD
    networks:
      - appnet
    command: ["sh", "-c", "redis-server --requirepass $$(cat /run/secrets/REDIS_PASSWORD)"]


  nginx:
    image: nginx:1.27-alpine
    deploy:
      restart_policy:
        condition: on-failure
    networks:
      - appnet
    ports:
      - "80:80"
    configs:
      - source: nginx_config
        target: /etc/nginx/conf.d/default.conf
      - source: index_html
        target: /usr/share/nginx/html/index.html


  web:
    image: kastonl/web-flask:latest
    deploy:
      replicas: 3
      restart_policy:
        condition: on-failure
    secrets:
     - POSTGRES_USER
     - POSTGRES_PASSWORD
     - REDIS_PASSWORD
    environment:
      REDIS_PASSWORD: /run/secrets/REDIS_PASSWORD
      POSTGRES_USER: /run/secrets/POSTGRES_USER
      POSTGRES_PASSWORD: /run/secrets/POSTGRES_PASSWORD
      POSTGRES_DB: devops
    networks:
      - appnet

networks:
  appnet:
    driver: overlay

configs:
  nginx_config:
    external: true
  db_init:
    external: true
  index_html:
    external: true

secrets:
  POSTGRES_PASSWORD:
    external: true
  POSTGRES_USER:
    external: true
  REDIS_PASSWORD:
    external: true